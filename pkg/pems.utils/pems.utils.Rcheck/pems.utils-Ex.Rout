
R version 2.13.1 (2011-07-08)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "pems.utils"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('pems.utils')
Loading required package: lattice
Loading required package: latticeExtra
Loading required package: RColorBrewer
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("1.1.make.import.data")
> ### * 1.1.make.import.data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 1.1.make.import.data
> ### Title: making and importing data
> ### Aliases: 1.1.make.import.data pems.objects isPEMS makePEMS import2PEMS
> ###   importTAB2PEMS importCSV2PEMS importOBS2PEMS importRoyalTek2PEMS
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #make little pems
> data <- data.frame(speed=1:10, emissions=1:10)
> units <- c("m/s", "g/s")
> pems <- makePEMS(x = data, units=units, example="my record") 
>  
> pems                       #the pems object

pems object: 2 data series (each 10 cases)
	with supporting structures: units, constants, history
	[and unique tags: example]

> summary(pems)              #summary of held data
     speed         emissions    
 Min.   : 1.00   Min.   : 1.00  
 1st Qu.: 3.25   1st Qu.: 3.25  
 Median : 5.50   Median : 5.50  
 Mean   : 5.50   Mean   : 5.50  
 3rd Qu.: 7.75   3rd Qu.: 7.75  
 Max.   :10.00   Max.   :10.00  
> checkInput(speed, pems)    #speed element
 [1]  1  2  3  4  5  6  7  8  9 10
attr(,"name")
[1] "speed"
attr(,"units")
[1] "m/s"
> 
> 
> 
> 
> cleanEx()
> nameEx("1.2.pems.structure")
> ### * 1.2.pems.structure
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 1.2.pems.structure
> ### Title: 'pems' object structure
> ### Aliases: 1.2.pems.structure pems.structure getElement getData
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #basic usage
> 
> getElement(velocity, pems.1)
   [1]  0.1  0.1  0.3  0.3  0.2  0.4  0.3  0.7  0.1  0.2  0.2  0.2  0.1  0.2
  [15]  0.1  0.3  0.2  0.3  0.2  0.4  0.1  0.2  0.2  0.1  0.1  0.1  0.3  0.2
  [29]  0.1  0.1  0.2  0.3  0.4  0.1  0.3  0.4  0.1  0.4  0.2  0.2  0.1  0.2
  [43]  0.4  0.2  0.1  0.6  0.2  0.3  1.1  0.3  0.1  0.2  0.3  0.5  0.2  0.2
  [57]  0.2  0.2  0.3  0.2  0.5  0.3  0.1  0.4  0.2  0.6  1.6  5.1  8.9 10.5
  [71] 13.4 15.9 18.4 19.8 17.7 11.2  6.1  4.9  5.3  7.3  6.5  3.3  0.2  0.2
  [85]  0.1  0.1  0.1  0.1  0.2  0.3  1.0  2.1  5.1 10.8 15.8 18.3 22.3 24.6
  [99] 25.6 25.9 25.1 26.2 28.6 32.3 36.7 41.0 42.8 45.4 47.5 50.0 52.1 53.0
 [113] 52.6 51.7 50.1 49.6 50.4 50.9 49.4 46.3 42.6 34.6 28.8 23.3 16.3  7.8
 [127]  1.9  0.1  0.1  0.0  0.1  0.1  0.1  0.1  0.1  0.1  0.1  0.7  4.2 11.3
 [141] 18.0 22.4 24.4 27.3 29.7 29.3 26.0 18.2 12.0  7.5  3.7  0.7  0.3  0.2
 [155]  0.1  0.3  0.2  0.1  0.0  0.3  0.2  0.2  0.3  0.2  0.1  0.2  0.1  0.1
 [169]  0.2  0.2  0.2  0.1  0.0  0.1  0.3  0.2  0.4  0.1  0.1  0.1  0.3  0.2
 [183]  0.1  0.2  0.1  0.4  3.4  8.9 14.5 19.0 22.6 24.5 31.0 34.6 36.8 41.2
 [197] 46.0 49.7 50.3 53.8 57.0 58.2 59.0 61.4 63.6 64.2 64.4 65.0 65.5 64.9
 [211] 62.9 62.0 61.6 63.0 62.8 62.4 62.6 61.2 61.1 59.5 57.9 55.8 52.8 48.7
 [225] 42.6 38.6 35.4 29.1 24.0 18.4 17.1 21.7 25.4 30.6 36.5 36.5 39.5 43.1
 [239] 46.2 47.2 48.5 50.3 52.2 54.0 54.0 54.0 54.0 54.0 54.0 53.9 52.9 51.9
 [253] 50.0 49.6 49.2 48.7 48.3 48.3 49.1 49.1 49.1 53.6 53.6 53.6 53.6 48.8
 [267] 48.8 48.8 48.2 48.2 41.5 41.4 36.6 34.1 31.6 22.6 22.7 24.9 27.7 29.8
 [281] 30.3 24.8 19.3 19.6 24.2 24.1 23.9 37.8 41.7 42.3 43.4 46.4 47.7 48.7
 [295] 50.8 53.1 54.6 53.5 53.9 55.2 55.2 54.9 55.7 57.2 55.2 52.2 49.4 47.7
 [309] 45.4 43.2 41.1 39.2 35.6 30.9 24.1 17.4 10.5  5.7  2.3  0.1  0.2  0.2
 [323]  0.0  0.2  0.1  0.1  0.2  0.1  0.2  0.1  0.1  0.2  0.0  0.4  0.1  0.1
 [337]  0.1  0.1  0.0  0.0  0.1  0.2  0.1  0.0  0.1  0.2  0.0  0.1  0.3  3.8
 [351] 10.7 17.0 20.4 20.8 24.5 27.2 31.6 35.9 38.5 40.0 42.8 45.3 47.4 48.4
 [365] 48.7 48.3 47.2 46.5 45.2 43.5 41.8 41.3 43.3 45.0 45.4 45.2 44.7 43.5
 [379] 42.2 41.1 39.0 33.4 30.5 26.8 22.2 16.0 11.0  2.4  0.7  0.1  0.1  0.1
 [393]  0.2  0.1  0.3  0.4  0.3  0.1  0.3  0.1  0.1  0.2  0.0  0.3  0.1  0.1
 [407]  0.1  0.1  0.0  0.2  0.2  0.0  0.1  0.0  0.2  0.2  0.3  0.2  0.5  0.2
 [421]  0.2  0.4  0.2  0.0  0.3  0.1  0.1  0.2  0.2  0.4  0.0  0.1  0.2  0.2
 [435]  0.1  0.2  0.2  0.2  0.1  0.1  0.2  0.1  0.2  0.1  0.1  0.3  0.1  0.0
 [449]  0.1  0.1  0.0  2.6  9.5 16.5 18.0 18.3 18.1 21.0 26.5 32.1 38.1 41.9
 [463] 43.9 47.1 50.4 53.7 56.9 57.6 58.4 61.1 62.2 63.8 63.4 63.9 63.7 61.7
 [477] 60.3 59.2 58.6 59.4 60.3 61.1 60.2 59.9 58.8 58.2 57.4 56.0 54.0 51.0
 [491] 46.6 40.3 37.0 33.6 27.4 20.8 16.8 14.1 14.8 19.8 25.1 31.3 34.7 35.5
 [505] 38.9 42.8 46.6 50.0 52.0 55.0 58.1 61.2 61.2 52.4 52.4 52.4 52.4 52.4
 [519] 52.4 56.3 63.0 66.4 69.7 69.7 60.2 60.2 60.2 60.2 60.2 60.2 60.2 60.2
 [533] 60.2 60.2 60.2 46.6 46.6 41.1 41.1 30.0 25.8 24.6 26.8 31.6 37.5 42.5
 [547] 47.5 49.2 50.0 55.0 55.0 56.1 59.4 59.4 60.4 57.7 61.7 61.7 61.7 61.7
 [561] 60.6 60.5 61.5 60.3 59.1 55.7 54.5 52.6 50.7 40.2 34.4 25.1 15.8  9.1
 [575]  3.0  0.1  0.1  0.0  0.0  0.1  0.1  0.2  0.1  0.0  0.1  0.1  0.0  0.1
 [589]  0.1  1.2  4.7 11.0 16.6 17.1 19.1 22.3 24.7 26.3 28.0 28.9 31.3 33.8
 [603] 33.9 36.3 38.0 38.3 40.3 42.2 42.1 42.1 41.9 41.1 40.4 41.0 42.0 41.5
 [617] 40.7 38.5 35.7 33.9 33.5 33.5 35.0 35.1 31.3 26.4 19.2 11.2  4.6  0.1
 [631]  0.2  0.2  0.1  0.1  0.1  0.1  0.1  0.1  0.2  0.0  0.1  0.2  0.2  2.8
 [645]  7.1 13.3 15.3 16.6 18.5 19.8 19.6 17.3 11.7  1.1  0.1  0.1  0.1  0.2
 [659]  0.1  0.1  0.1  0.1  0.0  0.2  0.2  0.2  0.2  0.1  0.0  0.2  0.1  0.1
 [673]  0.1  0.0  0.1  0.1  0.2  0.4  0.1  0.3  0.1  0.1  0.3  0.1  0.0  0.1
 [687]  0.1  0.3  0.2  0.1  0.2  0.2  0.2  0.2  0.5  0.1  0.3  0.1  0.2  0.2
 [701]  0.1  0.3  0.0  0.1  0.1  0.2  0.1  0.1  0.0  0.1  0.3  0.2  0.3  0.2
 [715]  0.2  0.1  0.1  0.2  0.1  0.2  0.1  0.2  0.0  0.0  0.4  2.6  9.8 12.5
 [729] 12.5 14.3 16.7 16.7 19.5 19.5 21.4 32.4 32.4 35.2 37.6 40.9 48.6 50.3
 [743] 50.3 56.5 56.5 61.9 61.9 62.9 63.2 63.2 63.2 62.0 61.4 61.4 60.2 59.2
 [757] 59.2 59.6 60.6 60.8 60.8 61.1 60.5 60.5 60.7 60.7 50.4 42.3 34.6 30.1
 [771] 25.9 20.2 16.6 14.8 16.8 22.1 27.0 32.4 35.9 37.2 40.2 44.0 46.7 48.1
 [785] 49.4 51.1 51.0 51.6 51.1 51.7 50.1 49.6 49.1 47.4 51.3 55.1 51.4 51.3
 [799] 51.7 51.9 52.1 52.1 51.4 51.1 50.1 49.4 49.3 47.1 45.9 45.4 45.8 45.5
 [813] 46.3 45.7 44.4 42.7 40.7 37.5 31.1 22.4 15.3 12.4  8.5  6.4  5.5  8.6
 [827] 13.7 19.8 25.9 30.7 32.6 37.2 41.7 44.2 45.2 48.3 50.8 52.9 53.0 53.6
 [841] 52.8 52.7 52.7 58.7 60.0 61.3 60.0 59.5 61.4 62.1 58.9 57.6 55.6 54.5
 [855] 52.3 46.9 44.0 41.1 38.1 20.4 13.7  8.3  0.8  0.2  0.0  0.1  0.2  0.1
 [869]  0.1  0.1  0.1  0.0  0.2  0.2  0.1  0.1  0.1  0.1  0.1  0.3  0.1  0.2
 [883]  0.1  0.1  0.1  0.1  0.1  0.0  0.0  0.0  0.1  0.3  0.0  0.1  0.1  0.1
 [897]  0.2  0.2  0.1  0.2  0.0  0.1  0.2  0.1  0.1  0.1  1.3  8.0 15.3 18.9
 [911] 17.7 16.7 21.5 24.4 25.6 27.8 26.9 23.2 17.6 11.1  5.3  2.1  0.2  0.1
 [925]  0.1  0.2  0.1  0.8  5.2 12.4 17.9 19.0 20.6 20.8 17.0 12.1 10.1  9.5
 [939]  9.7  5.3  1.1  0.1  0.4  0.2  0.1  0.4  0.3  0.1  0.1  0.1  0.1  0.1
 [953]  0.2  0.2  0.2  0.1  0.1  0.1  0.1  0.2  0.1  0.1  0.1  0.1  0.2  0.1
 [967]  0.1  0.2  0.1  0.0  0.1  0.2  0.1  0.3  0.2  0.3  0.2  0.2  0.1  0.3
 [981]  0.1  0.2  0.1  0.2  0.1  0.1  0.1  0.2  0.2  0.3  0.0  0.0  0.1  0.1
 [995]  0.3  0.3  0.6  0.1  0.1  0.2
attr(,"name")
[1] "velocity"
attr(,"units")
[1] "km/h"
> 
> #check... equivalent
> #checkInput(veolcity, pems.1)
> 
> 
> 
> 
> cleanEx()
> nameEx("1.3.merge.data.pems")
> ### * 1.3.merge.data.pems
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 1.3.merge.data.pems
> ### Title: Merging data and pems objects
> ### Aliases: 1.3.merge.data.pems merge.pems bindPEMS cAlign
> ###   findLinearOffset
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #some data
> temp <- rnorm(500)
> 
> #get two offset ranges
> 
> x <- temp[25:300]
> y <- temp[10:200]
> 
> plot(x, type="l"); lines(y, col="blue", lty=2)
> 
> #estimated offset
> 
> findLinearOffset(x,y)
[1] -15
> #[1] -15
> 
> #applying linear offset
> 
> ans <- cAlign(x,y, findLinearOffset(x,y))
> 
> plot(ans$x, type="l"); lines(ans$y, col="blue", lty=2)
> 
> 
> 
> 
> cleanEx()
> nameEx("1.4.export.data")
> ### * 1.4.export.data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 1.4.export.data
> ### Title: exporting data data
> ### Aliases: 1.4.export.data export.data exportData
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #making a tab-delimited copy of pems.1
> 
> ##exportData(pems.1, "pems.example.txt")
> ##dir()
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("2.1.generic.pems.handlers")
> ### * 2.1.generic.pems.handlers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: generic.pems.handlers
> ### Title: Generic handling of pems objects
> ### Aliases: generic.pems.handlers pems.generics names.pems print.pems
> ###   plot.pems summary.pems
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D 
> ##D #make object
> ##D print(pems.object)
> ##D names(pems.object)
> ##D 
> ## End(Not run) 
> 
> 
> 
> 
> cleanEx()
> nameEx("2.2.unit.handlers")
> ### * 2.2.unit.handlers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 2.2.unit.handlers
> ### Title: data unit handlers
> ### Aliases: 2.2.unit.handlers getUnits setUnits convertUnits
> ###   addUnitConversion addUnitAlias listUnitConversions
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #work with data units
> 
> #getting units
> #(where assigned)
> getUnits(velocity, pems.1) #km/h
[1] "km/h"
> 
> #setting units
> a <- 1:10
> a <- setUnits(a, "km/h")
> 
> #changing units
> convertUnits(a, "mi/h")
 [1] 0.44704 0.89408 1.34112 1.78816 2.23520 2.68224 3.12928 3.57632 4.02336
[10] 4.47040
attr(,"name")
[1] "a"
attr(,"units")
[1] "mi/h"
> 
> # [1] 0.6213712 1.2427424 1.8641136 2.4854848 3.1068560 3.7282272 4.3495983
> # [8] 4.9709695 5.5923407 6.2137119
> # units: "mi/h"
> 
> ###########
> ##example 2
> ###########
> 
> #working with local unit conversions
> #adding/updating unit conversion methods
> 
> #make a local reference
> ref.list <- ref.unit.conversions 
> 
> #add a miles/hour alias to mi/h
> ref.list <- addUnitAlias("mi/h", "miles/hour", ref.list)
> 
> #add a new conversion
> ref.list <- addUnitConversion(to = "silly", from = "km/h", 
+                               conversion = function(x) 12 + (21 * x), 
+                               tag = "kilometers/hour to some silly scale",
+                               unit.conversions = ref.list)
> 
> #use these
> convertUnits(a, "miles/hour", unit.conversions = ref.list)
 [1] 0.44704 0.89408 1.34112 1.78816 2.23520 2.68224 3.12928 3.57632 4.02336
[10] 4.47040
attr(,"name")
[1] "a"
attr(,"units")
[1] "miles/hour"
> 
> # [1] 0.6213712 1.2427424 1.8641136 2.4854848 3.1068560 3.7282272 4.3495983
> # [8] 4.9709695 5.5923407 6.2137119
> # units: "miles/hour" (as above but using your unit abbreviations)
> 
> convertUnits(a, "silly", unit.conversions = ref.list)
 [1]  33  54  75  96 117 138 159 180 201 222
attr(,"name")
[1] "a"
attr(,"units")
[1] "silly"
> 
> # [1]  33  54  75  96 117 138 159 180 201 222
> # units: "silly" (well, you get what you ask for)
> 
> 
> 
> 
> cleanEx()
> nameEx("2.3.1.vsp.calculations")
> ### * 2.3.1.vsp.calculations
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 2.3.1.vsp.calculations
> ### Title: Vehicle Specific Power (VSP) calculations
> ### Aliases: 2.3.1.vsp.calculations vsp.calculations vsp calcVSP
> ###   calcVSPJimenezPalaciosCMEM
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #basic usage
> 
> ans <- calcVSP(velocity, time = local.time, data = pems.1)
Warning: In calcVSP(...) slope not supplied
	 assuming 0
	 [suggest add slope to call and rerun if required]
> 
> #ans <- pems.1 + calculated vsp
> 
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("2.3.common.calculations")
> ### * 2.3.common.calculations
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 2.3.common.calculations
> ### Title: Common calculations
> ### Aliases: 2.3.common.calculations common.calculations calcDistance
> ###   calcSpeed calcAccel calcAcceleration calcJerk calcChecks calcPack
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #basic usage
> 
> ans <- calcAccel(velocity, local.time, pems.1)
> 
> #ans = pems.1 + calculated accel
> 
> ans <- calcAccel(velocity, local.time, pems.1, output = "input")
> 
> #ans = calculated accel
> 
> 
> ###########
> #example 2
> ###########
> 
> #making wrappers for routine data processing 
> 
> my.pems <- list(pems.1, pems.1)
> 
> sapply(my.pems, function(x) 
+                   calcAccel(velocity, local.time, data=x, output="input"))
               [,1]        [,2]
   [1,]  0.00000000  0.00000000
   [2,]  0.00000000  0.00000000
   [3,]  0.05555556  0.05555556
   [4,]  0.00000000  0.00000000
   [5,] -0.02777778 -0.02777778
   [6,]  0.05555556  0.05555556
   [7,] -0.02777778 -0.02777778
   [8,]  0.11111111  0.11111111
   [9,] -0.16666667 -0.16666667
  [10,]  0.02777778  0.02777778
  [11,]  0.00000000  0.00000000
  [12,]  0.00000000  0.00000000
  [13,] -0.02777778 -0.02777778
  [14,]  0.02777778  0.02777778
  [15,] -0.02777778 -0.02777778
  [16,]  0.05555556  0.05555556
  [17,] -0.02777778 -0.02777778
  [18,]  0.02777778  0.02777778
  [19,] -0.02777778 -0.02777778
  [20,]  0.05555556  0.05555556
  [21,] -0.08333333 -0.08333333
  [22,]  0.02777778  0.02777778
  [23,]  0.00000000  0.00000000
  [24,] -0.02777778 -0.02777778
  [25,]  0.00000000  0.00000000
  [26,]  0.00000000  0.00000000
  [27,]  0.05555556  0.05555556
  [28,] -0.02777778 -0.02777778
  [29,] -0.02777778 -0.02777778
  [30,]  0.00000000  0.00000000
  [31,]  0.02777778  0.02777778
  [32,]  0.02777778  0.02777778
  [33,]  0.02777778  0.02777778
  [34,] -0.08333333 -0.08333333
  [35,]  0.05555556  0.05555556
  [36,]  0.02777778  0.02777778
  [37,] -0.08333333 -0.08333333
  [38,]  0.08333333  0.08333333
  [39,] -0.05555556 -0.05555556
  [40,]  0.00000000  0.00000000
  [41,] -0.02777778 -0.02777778
  [42,]  0.02777778  0.02777778
  [43,]  0.05555556  0.05555556
  [44,] -0.05555556 -0.05555556
  [45,] -0.02777778 -0.02777778
  [46,]  0.13888889  0.13888889
  [47,] -0.11111111 -0.11111111
  [48,]  0.02777778  0.02777778
  [49,]  0.22222222  0.22222222
  [50,] -0.22222222 -0.22222222
  [51,] -0.05555556 -0.05555556
  [52,]  0.02777778  0.02777778
  [53,]  0.02777778  0.02777778
  [54,]  0.05555556  0.05555556
  [55,] -0.08333333 -0.08333333
  [56,]  0.00000000  0.00000000
  [57,]  0.00000000  0.00000000
  [58,]  0.00000000  0.00000000
  [59,]  0.02777778  0.02777778
  [60,] -0.02777778 -0.02777778
  [61,]  0.08333333  0.08333333
  [62,] -0.05555556 -0.05555556
  [63,] -0.05555556 -0.05555556
  [64,]  0.08333333  0.08333333
  [65,] -0.05555556 -0.05555556
  [66,]  0.11111111  0.11111111
  [67,]  0.27777778  0.27777778
  [68,]  0.97222222  0.97222222
  [69,]  1.05555556  1.05555556
  [70,]  0.44444444  0.44444444
  [71,]  0.80555556  0.80555556
  [72,]  0.69444444  0.69444444
  [73,]  0.69444444  0.69444444
  [74,]  0.38888889  0.38888889
  [75,] -0.58333333 -0.58333333
  [76,] -1.80555556 -1.80555556
  [77,] -1.41666667 -1.41666667
  [78,] -0.33333333 -0.33333333
  [79,]  0.11111111  0.11111111
  [80,]  0.55555556  0.55555556
  [81,] -0.22222222 -0.22222222
  [82,] -0.88888889 -0.88888889
  [83,] -0.86111111 -0.86111111
  [84,]  0.00000000  0.00000000
  [85,] -0.02777778 -0.02777778
  [86,]  0.00000000  0.00000000
  [87,]  0.00000000  0.00000000
  [88,]  0.00000000  0.00000000
  [89,]  0.02777778  0.02777778
  [90,]  0.02777778  0.02777778
  [91,]  0.19444444  0.19444444
  [92,]  0.30555556  0.30555556
  [93,]  0.83333333  0.83333333
  [94,]  1.58333333  1.58333333
  [95,]  1.38888889  1.38888889
  [96,]  0.69444444  0.69444444
  [97,]  1.11111111  1.11111111
  [98,]  0.63888889  0.63888889
  [99,]  0.27777778  0.27777778
 [100,]  0.08333333  0.08333333
 [101,] -0.22222222 -0.22222222
 [102,]  0.30555556  0.30555556
 [103,]  0.66666667  0.66666667
 [104,]  1.02777778  1.02777778
 [105,]  1.22222222  1.22222222
 [106,]  1.19444444  1.19444444
 [107,]  0.50000000  0.50000000
 [108,]  0.72222222  0.72222222
 [109,]  0.58333333  0.58333333
 [110,]  0.69444444  0.69444444
 [111,]  0.58333333  0.58333333
 [112,]  0.25000000  0.25000000
 [113,] -0.11111111 -0.11111111
 [114,] -0.25000000 -0.25000000
 [115,] -0.44444444 -0.44444444
 [116,] -0.13888889 -0.13888889
 [117,]  0.22222222  0.22222222
 [118,]  0.13888889  0.13888889
 [119,] -0.41666667 -0.41666667
 [120,] -0.86111111 -0.86111111
 [121,] -1.02777778 -1.02777778
 [122,] -2.22222222 -2.22222222
 [123,] -1.61111111 -1.61111111
 [124,] -1.52777778 -1.52777778
 [125,] -1.94444444 -1.94444444
 [126,] -2.36111111 -2.36111111
 [127,] -1.63888889 -1.63888889
 [128,] -0.50000000 -0.50000000
 [129,]  0.00000000  0.00000000
 [130,] -0.02777778 -0.02777778
 [131,]  0.02777778  0.02777778
 [132,]  0.00000000  0.00000000
 [133,]  0.00000000  0.00000000
 [134,]  0.00000000  0.00000000
 [135,]  0.00000000  0.00000000
 [136,]  0.00000000  0.00000000
 [137,]  0.00000000  0.00000000
 [138,]  0.16666667  0.16666667
 [139,]  0.97222222  0.97222222
 [140,]  1.97222222  1.97222222
 [141,]  1.86111111  1.86111111
 [142,]  1.22222222  1.22222222
 [143,]  0.55555556  0.55555556
 [144,]  0.80555556  0.80555556
 [145,]  0.66666667  0.66666667
 [146,] -0.11111111 -0.11111111
 [147,] -0.91666667 -0.91666667
 [148,] -2.16666667 -2.16666667
 [149,] -1.72222222 -1.72222222
 [150,] -1.25000000 -1.25000000
 [151,] -1.05555556 -1.05555556
 [152,] -0.83333333 -0.83333333
 [153,] -0.11111111 -0.11111111
 [154,] -0.02777778 -0.02777778
 [155,] -0.02777778 -0.02777778
 [156,]  0.05555556  0.05555556
 [157,] -0.02777778 -0.02777778
 [158,] -0.02777778 -0.02777778
 [159,] -0.02777778 -0.02777778
 [160,]  0.08333333  0.08333333
 [161,] -0.02777778 -0.02777778
 [162,]  0.00000000  0.00000000
 [163,]  0.02777778  0.02777778
 [164,] -0.02777778 -0.02777778
 [165,] -0.02777778 -0.02777778
 [166,]  0.02777778  0.02777778
 [167,] -0.02777778 -0.02777778
 [168,]  0.00000000  0.00000000
 [169,]  0.02777778  0.02777778
 [170,]  0.00000000  0.00000000
 [171,]  0.00000000  0.00000000
 [172,] -0.02777778 -0.02777778
 [173,] -0.02777778 -0.02777778
 [174,]  0.02777778  0.02777778
 [175,]  0.05555556  0.05555556
 [176,] -0.02777778 -0.02777778
 [177,]  0.05555556  0.05555556
 [178,] -0.08333333 -0.08333333
 [179,]  0.00000000  0.00000000
 [180,]  0.00000000  0.00000000
 [181,]  0.05555556  0.05555556
 [182,] -0.02777778 -0.02777778
 [183,] -0.02777778 -0.02777778
 [184,]  0.02777778  0.02777778
 [185,] -0.02777778 -0.02777778
 [186,]  0.08333333  0.08333333
 [187,]  0.83333333  0.83333333
 [188,]  1.52777778  1.52777778
 [189,]  1.55555556  1.55555556
 [190,]  1.25000000  1.25000000
 [191,]  1.00000000  1.00000000
 [192,]  0.52777778  0.52777778
 [193,]  1.80555556  1.80555556
 [194,]  1.00000000  1.00000000
 [195,]  0.61111111  0.61111111
 [196,]  1.22222222  1.22222222
 [197,]  1.33333333  1.33333333
 [198,]  1.02777778  1.02777778
 [199,]  0.16666667  0.16666667
 [200,]  0.97222222  0.97222222
 [201,]  0.88888889  0.88888889
 [202,]  0.33333333  0.33333333
 [203,]  0.22222222  0.22222222
 [204,]  0.66666667  0.66666667
 [205,]  0.61111111  0.61111111
 [206,]  0.16666667  0.16666667
 [207,]  0.05555556  0.05555556
 [208,]  0.16666667  0.16666667
 [209,]  0.13888889  0.13888889
 [210,] -0.16666667 -0.16666667
 [211,] -0.55555556 -0.55555556
 [212,] -0.25000000 -0.25000000
 [213,] -0.11111111 -0.11111111
 [214,]  0.38888889  0.38888889
 [215,] -0.05555556 -0.05555556
 [216,] -0.11111111 -0.11111111
 [217,]  0.05555556  0.05555556
 [218,] -0.38888889 -0.38888889
 [219,] -0.02777778 -0.02777778
 [220,] -0.44444444 -0.44444444
 [221,] -0.44444444 -0.44444444
 [222,] -0.58333333 -0.58333333
 [223,] -0.83333333 -0.83333333
 [224,] -1.13888889 -1.13888889
 [225,] -1.69444444 -1.69444444
 [226,] -1.11111111 -1.11111111
 [227,] -0.88888889 -0.88888889
 [228,] -1.75000000 -1.75000000
 [229,] -1.41666667 -1.41666667
 [230,] -1.55555556 -1.55555556
 [231,] -0.36111111 -0.36111111
 [232,]  1.27777778  1.27777778
 [233,]  1.02777778  1.02777778
 [234,]  1.44444444  1.44444444
 [235,]  1.63888889  1.63888889
 [236,]  0.00000000  0.00000000
 [237,]  0.83333333  0.83333333
 [238,]  1.00000000  1.00000000
 [239,]  0.86111111  0.86111111
 [240,]  0.27777778  0.27777778
 [241,]  0.36111111  0.36111111
 [242,]  0.50000000  0.50000000
 [243,]  0.52777778  0.52777778
 [244,]  0.50000000  0.50000000
 [245,]  0.00000000  0.00000000
 [246,]  0.00000000  0.00000000
 [247,]  0.00000000  0.00000000
 [248,]  0.00000000  0.00000000
 [249,]  0.00000000  0.00000000
 [250,] -0.02777778 -0.02777778
 [251,] -0.27777778 -0.27777778
 [252,] -0.27777778 -0.27777778
 [253,] -0.52777778 -0.52777778
 [254,] -0.11111111 -0.11111111
 [255,] -0.11111111 -0.11111111
 [256,] -0.13888889 -0.13888889
 [257,] -0.11111111 -0.11111111
 [258,]  0.00000000  0.00000000
 [259,]  0.22222222  0.22222222
 [260,]  0.00000000  0.00000000
 [261,]  0.00000000  0.00000000
 [262,]  1.25000000  1.25000000
 [263,]  0.00000000  0.00000000
 [264,]  0.00000000  0.00000000
 [265,]  0.00000000  0.00000000
 [266,] -1.33333333 -1.33333333
 [267,]  0.00000000  0.00000000
 [268,]  0.00000000  0.00000000
 [269,] -0.16666667 -0.16666667
 [270,]  0.00000000  0.00000000
 [271,] -1.86111111 -1.86111111
 [272,] -0.02777778 -0.02777778
 [273,] -1.33333333 -1.33333333
 [274,] -0.69444444 -0.69444444
 [275,] -0.69444444 -0.69444444
 [276,] -2.50000000 -2.50000000
 [277,]  0.02777778  0.02777778
 [278,]  0.61111111  0.61111111
 [279,]  0.77777778  0.77777778
 [280,]  0.58333333  0.58333333
 [281,]  0.13888889  0.13888889
 [282,] -1.52777778 -1.52777778
 [283,] -1.52777778 -1.52777778
 [284,]  0.08333333  0.08333333
 [285,]  1.27777778  1.27777778
 [286,] -0.02777778 -0.02777778
 [287,] -0.05555556 -0.05555556
 [288,]  3.86111111  3.86111111
 [289,]  1.08333333  1.08333333
 [290,]  0.16666667  0.16666667
 [291,]  0.30555556  0.30555556
 [292,]  0.83333333  0.83333333
 [293,]  0.36111111  0.36111111
 [294,]  0.27777778  0.27777778
 [295,]  0.58333333  0.58333333
 [296,]  0.63888889  0.63888889
 [297,]  0.41666667  0.41666667
 [298,] -0.30555556 -0.30555556
 [299,]  0.11111111  0.11111111
 [300,]  0.36111111  0.36111111
 [301,]  0.00000000  0.00000000
 [302,] -0.08333333 -0.08333333
 [303,]  0.22222222  0.22222222
 [304,]  0.41666667  0.41666667
 [305,] -0.55555556 -0.55555556
 [306,] -0.83333333 -0.83333333
 [307,] -0.77777778 -0.77777778
 [308,] -0.47222222 -0.47222222
 [309,] -0.63888889 -0.63888889
 [310,] -0.61111111 -0.61111111
 [311,] -0.58333333 -0.58333333
 [312,] -0.52777778 -0.52777778
 [313,] -1.00000000 -1.00000000
 [314,] -1.30555556 -1.30555556
 [315,] -1.88888889 -1.88888889
 [316,] -1.86111111 -1.86111111
 [317,] -1.91666667 -1.91666667
 [318,] -1.33333333 -1.33333333
 [319,] -0.94444444 -0.94444444
 [320,] -0.61111111 -0.61111111
 [321,]  0.02777778  0.02777778
 [322,]  0.00000000  0.00000000
 [323,] -0.05555556 -0.05555556
 [324,]  0.05555556  0.05555556
 [325,] -0.02777778 -0.02777778
 [326,]  0.00000000  0.00000000
 [327,]  0.02777778  0.02777778
 [328,] -0.02777778 -0.02777778
 [329,]  0.02777778  0.02777778
 [330,] -0.02777778 -0.02777778
 [331,]  0.00000000  0.00000000
 [332,]  0.02777778  0.02777778
 [333,] -0.05555556 -0.05555556
 [334,]  0.11111111  0.11111111
 [335,] -0.08333333 -0.08333333
 [336,]  0.00000000  0.00000000
 [337,]  0.00000000  0.00000000
 [338,]  0.00000000  0.00000000
 [339,] -0.02777778 -0.02777778
 [340,]  0.00000000  0.00000000
 [341,]  0.02777778  0.02777778
 [342,]  0.02777778  0.02777778
 [343,] -0.02777778 -0.02777778
 [344,] -0.02777778 -0.02777778
 [345,]  0.02777778  0.02777778
 [346,]  0.02777778  0.02777778
 [347,] -0.05555556 -0.05555556
 [348,]  0.02777778  0.02777778
 [349,]  0.05555556  0.05555556
 [350,]  0.97222222  0.97222222
 [351,]  1.91666667  1.91666667
 [352,]  1.75000000  1.75000000
 [353,]  0.94444444  0.94444444
 [354,]  0.11111111  0.11111111
 [355,]  1.02777778  1.02777778
 [356,]  0.75000000  0.75000000
 [357,]  1.22222222  1.22222222
 [358,]  1.19444444  1.19444444
 [359,]  0.72222222  0.72222222
 [360,]  0.41666667  0.41666667
 [361,]  0.77777778  0.77777778
 [362,]  0.69444444  0.69444444
 [363,]  0.58333333  0.58333333
 [364,]  0.27777778  0.27777778
 [365,]  0.08333333  0.08333333
 [366,] -0.11111111 -0.11111111
 [367,] -0.30555556 -0.30555556
 [368,] -0.19444444 -0.19444444
 [369,] -0.36111111 -0.36111111
 [370,] -0.47222222 -0.47222222
 [371,] -0.47222222 -0.47222222
 [372,] -0.13888889 -0.13888889
 [373,]  0.55555556  0.55555556
 [374,]  0.47222222  0.47222222
 [375,]  0.11111111  0.11111111
 [376,] -0.05555556 -0.05555556
 [377,] -0.13888889 -0.13888889
 [378,] -0.33333333 -0.33333333
 [379,] -0.36111111 -0.36111111
 [380,] -0.30555556 -0.30555556
 [381,] -0.58333333 -0.58333333
 [382,] -1.55555556 -1.55555556
 [383,] -0.80555556 -0.80555556
 [384,] -1.02777778 -1.02777778
 [385,] -1.27777778 -1.27777778
 [386,] -1.72222222 -1.72222222
 [387,] -1.38888889 -1.38888889
 [388,] -2.38888889 -2.38888889
 [389,] -0.47222222 -0.47222222
 [390,] -0.16666667 -0.16666667
 [391,]  0.00000000  0.00000000
 [392,]  0.00000000  0.00000000
 [393,]  0.02777778  0.02777778
 [394,] -0.02777778 -0.02777778
 [395,]  0.05555556  0.05555556
 [396,]  0.02777778  0.02777778
 [397,] -0.02777778 -0.02777778
 [398,] -0.05555556 -0.05555556
 [399,]  0.05555556  0.05555556
 [400,] -0.05555556 -0.05555556
 [401,]  0.00000000  0.00000000
 [402,]  0.02777778  0.02777778
 [403,] -0.05555556 -0.05555556
 [404,]  0.08333333  0.08333333
 [405,] -0.05555556 -0.05555556
 [406,]  0.00000000  0.00000000
 [407,]  0.00000000  0.00000000
 [408,]  0.00000000  0.00000000
 [409,] -0.02777778 -0.02777778
 [410,]  0.05555556  0.05555556
 [411,]  0.00000000  0.00000000
 [412,] -0.05555556 -0.05555556
 [413,]  0.02777778  0.02777778
 [414,] -0.02777778 -0.02777778
 [415,]  0.05555556  0.05555556
 [416,]  0.00000000  0.00000000
 [417,]  0.02777778  0.02777778
 [418,] -0.02777778 -0.02777778
 [419,]  0.08333333  0.08333333
 [420,] -0.08333333 -0.08333333
 [421,]  0.00000000  0.00000000
 [422,]  0.05555556  0.05555556
 [423,] -0.05555556 -0.05555556
 [424,] -0.05555556 -0.05555556
 [425,]  0.08333333  0.08333333
 [426,] -0.05555556 -0.05555556
 [427,]  0.00000000  0.00000000
 [428,]  0.02777778  0.02777778
 [429,]  0.00000000  0.00000000
 [430,]  0.05555556  0.05555556
 [431,] -0.11111111 -0.11111111
 [432,]  0.02777778  0.02777778
 [433,]  0.02777778  0.02777778
 [434,]  0.00000000  0.00000000
 [435,] -0.02777778 -0.02777778
 [436,]  0.02777778  0.02777778
 [437,]  0.00000000  0.00000000
 [438,]  0.00000000  0.00000000
 [439,] -0.02777778 -0.02777778
 [440,]  0.00000000  0.00000000
 [441,]  0.02777778  0.02777778
 [442,] -0.02777778 -0.02777778
 [443,]  0.02777778  0.02777778
 [444,] -0.02777778 -0.02777778
 [445,]  0.00000000  0.00000000
 [446,]  0.05555556  0.05555556
 [447,] -0.05555556 -0.05555556
 [448,] -0.02777778 -0.02777778
 [449,]  0.02777778  0.02777778
 [450,]  0.00000000  0.00000000
 [451,] -0.02777778 -0.02777778
 [452,]  0.72222222  0.72222222
 [453,]  1.91666667  1.91666667
 [454,]  1.94444444  1.94444444
 [455,]  0.41666667  0.41666667
 [456,]  0.08333333  0.08333333
 [457,] -0.05555556 -0.05555556
 [458,]  0.80555556  0.80555556
 [459,]  1.52777778  1.52777778
 [460,]  1.55555556  1.55555556
 [461,]  1.66666667  1.66666667
 [462,]  1.05555556  1.05555556
 [463,]  0.55555556  0.55555556
 [464,]  0.88888889  0.88888889
 [465,]  0.91666667  0.91666667
 [466,]  0.91666667  0.91666667
 [467,]  0.88888889  0.88888889
 [468,]  0.19444444  0.19444444
 [469,]  0.22222222  0.22222222
 [470,]  0.75000000  0.75000000
 [471,]  0.30555556  0.30555556
 [472,]  0.44444444  0.44444444
 [473,] -0.11111111 -0.11111111
 [474,]  0.13888889  0.13888889
 [475,] -0.05555556 -0.05555556
 [476,] -0.55555556 -0.55555556
 [477,] -0.38888889 -0.38888889
 [478,] -0.30555556 -0.30555556
 [479,] -0.16666667 -0.16666667
 [480,]  0.22222222  0.22222222
 [481,]  0.25000000  0.25000000
 [482,]  0.22222222  0.22222222
 [483,] -0.25000000 -0.25000000
 [484,] -0.08333333 -0.08333333
 [485,] -0.30555556 -0.30555556
 [486,] -0.16666667 -0.16666667
 [487,] -0.22222222 -0.22222222
 [488,] -0.38888889 -0.38888889
 [489,] -0.55555556 -0.55555556
 [490,] -0.83333333 -0.83333333
 [491,] -1.22222222 -1.22222222
 [492,] -1.75000000 -1.75000000
 [493,] -0.91666667 -0.91666667
 [494,] -0.94444444 -0.94444444
 [495,] -1.72222222 -1.72222222
 [496,] -1.83333333 -1.83333333
 [497,] -1.11111111 -1.11111111
 [498,] -0.75000000 -0.75000000
 [499,]  0.19444444  0.19444444
 [500,]  1.38888889  1.38888889
 [501,]  1.47222222  1.47222222
 [502,]  1.72222222  1.72222222
 [503,]  0.94444444  0.94444444
 [504,]  0.22222222  0.22222222
 [505,]  0.94444444  0.94444444
 [506,]  1.08333333  1.08333333
 [507,]  1.05555556  1.05555556
 [508,]  0.94444444  0.94444444
 [509,]  0.55555556  0.55555556
 [510,]  0.83333333  0.83333333
 [511,]  0.86111111  0.86111111
 [512,]  0.86111111  0.86111111
 [513,]  0.00000000  0.00000000
 [514,] -2.44444444 -2.44444444
 [515,]  0.00000000  0.00000000
 [516,]  0.00000000  0.00000000
 [517,]  0.00000000  0.00000000
 [518,]  0.00000000  0.00000000
 [519,]  0.00000000  0.00000000
 [520,]  1.08333333  1.08333333
 [521,]  1.86111111  1.86111111
 [522,]  0.94444444  0.94444444
 [523,]  0.91666667  0.91666667
 [524,]  0.00000000  0.00000000
 [525,] -2.63888889 -2.63888889
 [526,]  0.00000000  0.00000000
 [527,]  0.00000000  0.00000000
 [528,]  0.00000000  0.00000000
 [529,]  0.00000000  0.00000000
 [530,]  0.00000000  0.00000000
 [531,]  0.00000000  0.00000000
 [532,]  0.00000000  0.00000000
 [533,]  0.00000000  0.00000000
 [534,]  0.00000000  0.00000000
 [535,]  0.00000000  0.00000000
 [536,] -3.77777778 -3.77777778
 [537,]  0.00000000  0.00000000
 [538,] -1.52777778 -1.52777778
 [539,]  0.00000000  0.00000000
 [540,] -3.08333333 -3.08333333
 [541,] -1.16666667 -1.16666667
 [542,] -0.33333333 -0.33333333
 [543,]  0.61111111  0.61111111
 [544,]  1.33333333  1.33333333
 [545,]  1.63888889  1.63888889
 [546,]  1.38888889  1.38888889
 [547,]  1.38888889  1.38888889
 [548,]  0.47222222  0.47222222
 [549,]  0.22222222  0.22222222
 [550,]  1.38888889  1.38888889
 [551,]  0.00000000  0.00000000
 [552,]  0.30555556  0.30555556
 [553,]  0.91666667  0.91666667
 [554,]  0.00000000  0.00000000
 [555,]  0.27777778  0.27777778
 [556,] -0.75000000 -0.75000000
 [557,]  1.11111111  1.11111111
 [558,]  0.00000000  0.00000000
 [559,]  0.00000000  0.00000000
 [560,]  0.00000000  0.00000000
 [561,] -0.30555556 -0.30555556
 [562,] -0.02777778 -0.02777778
 [563,]  0.27777778  0.27777778
 [564,] -0.33333333 -0.33333333
 [565,] -0.33333333 -0.33333333
 [566,] -0.94444444 -0.94444444
 [567,] -0.33333333 -0.33333333
 [568,] -0.52777778 -0.52777778
 [569,] -0.52777778 -0.52777778
 [570,] -2.91666667 -2.91666667
 [571,] -1.61111111 -1.61111111
 [572,] -2.58333333 -2.58333333
 [573,] -2.58333333 -2.58333333
 [574,] -1.86111111 -1.86111111
 [575,] -1.69444444 -1.69444444
 [576,] -0.80555556 -0.80555556
 [577,]  0.00000000  0.00000000
 [578,] -0.02777778 -0.02777778
 [579,]  0.00000000  0.00000000
 [580,]  0.02777778  0.02777778
 [581,]  0.00000000  0.00000000
 [582,]  0.02777778  0.02777778
 [583,] -0.02777778 -0.02777778
 [584,] -0.02777778 -0.02777778
 [585,]  0.02777778  0.02777778
 [586,]  0.00000000  0.00000000
 [587,] -0.02777778 -0.02777778
 [588,]  0.02777778  0.02777778
 [589,]  0.00000000  0.00000000
 [590,]  0.30555556  0.30555556
 [591,]  0.97222222  0.97222222
 [592,]  1.75000000  1.75000000
 [593,]  1.55555556  1.55555556
 [594,]  0.13888889  0.13888889
 [595,]  0.55555556  0.55555556
 [596,]  0.88888889  0.88888889
 [597,]  0.66666667  0.66666667
 [598,]  0.44444444  0.44444444
 [599,]  0.47222222  0.47222222
 [600,]  0.25000000  0.25000000
 [601,]  0.66666667  0.66666667
 [602,]  0.69444444  0.69444444
 [603,]  0.02777778  0.02777778
 [604,]  0.66666667  0.66666667
 [605,]  0.47222222  0.47222222
 [606,]  0.08333333  0.08333333
 [607,]  0.55555556  0.55555556
 [608,]  0.52777778  0.52777778
 [609,] -0.02777778 -0.02777778
 [610,]  0.00000000  0.00000000
 [611,] -0.05555556 -0.05555556
 [612,] -0.22222222 -0.22222222
 [613,] -0.19444444 -0.19444444
 [614,]  0.16666667  0.16666667
 [615,]  0.27777778  0.27777778
 [616,] -0.13888889 -0.13888889
 [617,] -0.22222222 -0.22222222
 [618,] -0.61111111 -0.61111111
 [619,] -0.77777778 -0.77777778
 [620,] -0.50000000 -0.50000000
 [621,] -0.11111111 -0.11111111
 [622,]  0.00000000  0.00000000
 [623,]  0.41666667  0.41666667
 [624,]  0.02777778  0.02777778
 [625,] -1.05555556 -1.05555556
 [626,] -1.36111111 -1.36111111
 [627,] -2.00000000 -2.00000000
 [628,] -2.22222222 -2.22222222
 [629,] -1.83333333 -1.83333333
 [630,] -1.25000000 -1.25000000
 [631,]  0.02777778  0.02777778
 [632,]  0.00000000  0.00000000
 [633,] -0.02777778 -0.02777778
 [634,]  0.00000000  0.00000000
 [635,]  0.00000000  0.00000000
 [636,]  0.00000000  0.00000000
 [637,]  0.00000000  0.00000000
 [638,]  0.00000000  0.00000000
 [639,]  0.02777778  0.02777778
 [640,] -0.05555556 -0.05555556
 [641,]  0.02777778  0.02777778
 [642,]  0.02777778  0.02777778
 [643,]  0.00000000  0.00000000
 [644,]  0.72222222  0.72222222
 [645,]  1.19444444  1.19444444
 [646,]  1.72222222  1.72222222
 [647,]  0.55555556  0.55555556
 [648,]  0.36111111  0.36111111
 [649,]  0.52777778  0.52777778
 [650,]  0.36111111  0.36111111
 [651,] -0.05555556 -0.05555556
 [652,] -0.63888889 -0.63888889
 [653,] -1.55555556 -1.55555556
 [654,] -2.94444444 -2.94444444
 [655,] -0.27777778 -0.27777778
 [656,]  0.00000000  0.00000000
 [657,]  0.00000000  0.00000000
 [658,]  0.02777778  0.02777778
 [659,] -0.02777778 -0.02777778
 [660,]  0.00000000  0.00000000
 [661,]  0.00000000  0.00000000
 [662,]  0.00000000  0.00000000
 [663,] -0.02777778 -0.02777778
 [664,]  0.05555556  0.05555556
 [665,]  0.00000000  0.00000000
 [666,]  0.00000000  0.00000000
 [667,]  0.00000000  0.00000000
 [668,] -0.02777778 -0.02777778
 [669,] -0.02777778 -0.02777778
 [670,]  0.05555556  0.05555556
 [671,] -0.02777778 -0.02777778
 [672,]  0.00000000  0.00000000
 [673,]  0.00000000  0.00000000
 [674,] -0.02777778 -0.02777778
 [675,]  0.02777778  0.02777778
 [676,]  0.00000000  0.00000000
 [677,]  0.02777778  0.02777778
 [678,]  0.05555556  0.05555556
 [679,] -0.08333333 -0.08333333
 [680,]  0.05555556  0.05555556
 [681,] -0.05555556 -0.05555556
 [682,]  0.00000000  0.00000000
 [683,]  0.05555556  0.05555556
 [684,] -0.05555556 -0.05555556
 [685,] -0.02777778 -0.02777778
 [686,]  0.02777778  0.02777778
 [687,]  0.00000000  0.00000000
 [688,]  0.05555556  0.05555556
 [689,] -0.02777778 -0.02777778
 [690,] -0.02777778 -0.02777778
 [691,]  0.02777778  0.02777778
 [692,]  0.00000000  0.00000000
 [693,]  0.00000000  0.00000000
 [694,]  0.00000000  0.00000000
 [695,]  0.08333333  0.08333333
 [696,] -0.11111111 -0.11111111
 [697,]  0.05555556  0.05555556
 [698,] -0.05555556 -0.05555556
 [699,]  0.02777778  0.02777778
 [700,]  0.00000000  0.00000000
 [701,] -0.02777778 -0.02777778
 [702,]  0.05555556  0.05555556
 [703,] -0.08333333 -0.08333333
 [704,]  0.02777778  0.02777778
 [705,]  0.00000000  0.00000000
 [706,]  0.02777778  0.02777778
 [707,] -0.02777778 -0.02777778
 [708,]  0.00000000  0.00000000
 [709,] -0.02777778 -0.02777778
 [710,]  0.02777778  0.02777778
 [711,]  0.05555556  0.05555556
 [712,] -0.02777778 -0.02777778
 [713,]  0.02777778  0.02777778
 [714,] -0.02777778 -0.02777778
 [715,]  0.00000000  0.00000000
 [716,] -0.02777778 -0.02777778
 [717,]  0.00000000  0.00000000
 [718,]  0.02777778  0.02777778
 [719,] -0.02777778 -0.02777778
 [720,]  0.02777778  0.02777778
 [721,] -0.02777778 -0.02777778
 [722,]  0.02777778  0.02777778
 [723,] -0.05555556 -0.05555556
 [724,]  0.00000000  0.00000000
 [725,]  0.11111111  0.11111111
 [726,]  0.61111111  0.61111111
 [727,]  2.00000000  2.00000000
 [728,]  0.75000000  0.75000000
 [729,]  0.00000000  0.00000000
 [730,]  0.50000000  0.50000000
 [731,]  0.66666667  0.66666667
 [732,]  0.00000000  0.00000000
 [733,]  0.77777778  0.77777778
 [734,]  0.00000000  0.00000000
 [735,]  0.52777778  0.52777778
 [736,]  3.05555556  3.05555556
 [737,]  0.00000000  0.00000000
 [738,]  0.77777778  0.77777778
 [739,]  0.66666667  0.66666667
 [740,]  0.91666667  0.91666667
 [741,]  2.13888889  2.13888889
 [742,]  0.47222222  0.47222222
 [743,]  0.00000000  0.00000000
 [744,]  1.72222222  1.72222222
 [745,]  0.00000000  0.00000000
 [746,]  1.50000000  1.50000000
 [747,]  0.00000000  0.00000000
 [748,]  0.27777778  0.27777778
 [749,]  0.08333333  0.08333333
 [750,]  0.00000000  0.00000000
 [751,]  0.00000000  0.00000000
 [752,] -0.33333333 -0.33333333
 [753,] -0.16666667 -0.16666667
 [754,]  0.00000000  0.00000000
 [755,] -0.33333333 -0.33333333
 [756,] -0.27777778 -0.27777778
 [757,]  0.00000000  0.00000000
 [758,]  0.11111111  0.11111111
 [759,]  0.27777778  0.27777778
 [760,]  0.05555556  0.05555556
 [761,]  0.00000000  0.00000000
 [762,]  0.08333333  0.08333333
 [763,] -0.16666667 -0.16666667
 [764,]  0.00000000  0.00000000
 [765,]  0.05555556  0.05555556
 [766,]  0.00000000  0.00000000
 [767,] -2.86111111 -2.86111111
 [768,] -2.25000000 -2.25000000
 [769,] -2.13888889 -2.13888889
 [770,] -1.25000000 -1.25000000
 [771,] -1.16666667 -1.16666667
 [772,] -1.58333333 -1.58333333
 [773,] -1.00000000 -1.00000000
 [774,] -0.50000000 -0.50000000
 [775,]  0.55555556  0.55555556
 [776,]  1.47222222  1.47222222
 [777,]  1.36111111  1.36111111
 [778,]  1.50000000  1.50000000
 [779,]  0.97222222  0.97222222
 [780,]  0.36111111  0.36111111
 [781,]  0.83333333  0.83333333
 [782,]  1.05555556  1.05555556
 [783,]  0.75000000  0.75000000
 [784,]  0.38888889  0.38888889
 [785,]  0.36111111  0.36111111
 [786,]  0.47222222  0.47222222
 [787,] -0.02777778 -0.02777778
 [788,]  0.16666667  0.16666667
 [789,] -0.13888889 -0.13888889
 [790,]  0.16666667  0.16666667
 [791,] -0.44444444 -0.44444444
 [792,] -0.13888889 -0.13888889
 [793,] -0.13888889 -0.13888889
 [794,] -0.47222222 -0.47222222
 [795,]  1.08333333  1.08333333
 [796,]  1.05555556  1.05555556
 [797,] -1.02777778 -1.02777778
 [798,] -0.02777778 -0.02777778
 [799,]  0.11111111  0.11111111
 [800,]  0.05555556  0.05555556
 [801,]  0.05555556  0.05555556
 [802,]  0.00000000  0.00000000
 [803,] -0.19444444 -0.19444444
 [804,] -0.08333333 -0.08333333
 [805,] -0.27777778 -0.27777778
 [806,] -0.19444444 -0.19444444
 [807,] -0.02777778 -0.02777778
 [808,] -0.61111111 -0.61111111
 [809,] -0.33333333 -0.33333333
 [810,] -0.13888889 -0.13888889
 [811,]  0.11111111  0.11111111
 [812,] -0.08333333 -0.08333333
 [813,]  0.22222222  0.22222222
 [814,] -0.16666667 -0.16666667
 [815,] -0.36111111 -0.36111111
 [816,] -0.47222222 -0.47222222
 [817,] -0.55555556 -0.55555556
 [818,] -0.88888889 -0.88888889
 [819,] -1.77777778 -1.77777778
 [820,] -2.41666667 -2.41666667
 [821,] -1.97222222 -1.97222222
 [822,] -0.80555556 -0.80555556
 [823,] -1.08333333 -1.08333333
 [824,] -0.58333333 -0.58333333
 [825,] -0.25000000 -0.25000000
 [826,]  0.86111111  0.86111111
 [827,]  1.41666667  1.41666667
 [828,]  1.69444444  1.69444444
 [829,]  1.69444444  1.69444444
 [830,]  1.33333333  1.33333333
 [831,]  0.52777778  0.52777778
 [832,]  1.27777778  1.27777778
 [833,]  1.25000000  1.25000000
 [834,]  0.69444444  0.69444444
 [835,]  0.27777778  0.27777778
 [836,]  0.86111111  0.86111111
 [837,]  0.69444444  0.69444444
 [838,]  0.58333333  0.58333333
 [839,]  0.02777778  0.02777778
 [840,]  0.16666667  0.16666667
 [841,] -0.22222222 -0.22222222
 [842,] -0.02777778 -0.02777778
 [843,]  0.00000000  0.00000000
 [844,]  1.66666667  1.66666667
 [845,]  0.36111111  0.36111111
 [846,]  0.36111111  0.36111111
 [847,] -0.36111111 -0.36111111
 [848,] -0.13888889 -0.13888889
 [849,]  0.52777778  0.52777778
 [850,]  0.19444444  0.19444444
 [851,] -0.88888889 -0.88888889
 [852,] -0.36111111 -0.36111111
 [853,] -0.55555556 -0.55555556
 [854,] -0.30555556 -0.30555556
 [855,] -0.61111111 -0.61111111
 [856,] -1.50000000 -1.50000000
 [857,] -0.80555556 -0.80555556
 [858,] -0.80555556 -0.80555556
 [859,] -0.83333333 -0.83333333
 [860,] -4.91666667 -4.91666667
 [861,] -1.86111111 -1.86111111
 [862,] -1.50000000 -1.50000000
 [863,] -2.08333333 -2.08333333
 [864,] -0.16666667 -0.16666667
 [865,] -0.05555556 -0.05555556
 [866,]  0.02777778  0.02777778
 [867,]  0.02777778  0.02777778
 [868,] -0.02777778 -0.02777778
 [869,]  0.00000000  0.00000000
 [870,]  0.00000000  0.00000000
 [871,]  0.00000000  0.00000000
 [872,] -0.02777778 -0.02777778
 [873,]  0.05555556  0.05555556
 [874,]  0.00000000  0.00000000
 [875,] -0.02777778 -0.02777778
 [876,]  0.00000000  0.00000000
 [877,]  0.00000000  0.00000000
 [878,]  0.00000000  0.00000000
 [879,]  0.00000000  0.00000000
 [880,]  0.05555556  0.05555556
 [881,] -0.05555556 -0.05555556
 [882,]  0.02777778  0.02777778
 [883,] -0.02777778 -0.02777778
 [884,]  0.00000000  0.00000000
 [885,]  0.00000000  0.00000000
 [886,]  0.00000000  0.00000000
 [887,]  0.00000000  0.00000000
 [888,] -0.02777778 -0.02777778
 [889,]  0.00000000  0.00000000
 [890,]  0.00000000  0.00000000
 [891,]  0.02777778  0.02777778
 [892,]  0.05555556  0.05555556
 [893,] -0.08333333 -0.08333333
 [894,]  0.02777778  0.02777778
 [895,]  0.00000000  0.00000000
 [896,]  0.00000000  0.00000000
 [897,]  0.02777778  0.02777778
 [898,]  0.00000000  0.00000000
 [899,] -0.02777778 -0.02777778
 [900,]  0.02777778  0.02777778
 [901,] -0.05555556 -0.05555556
 [902,]  0.02777778  0.02777778
 [903,]  0.02777778  0.02777778
 [904,] -0.02777778 -0.02777778
 [905,]  0.00000000  0.00000000
 [906,]  0.00000000  0.00000000
 [907,]  0.33333333  0.33333333
 [908,]  1.86111111  1.86111111
 [909,]  2.02777778  2.02777778
 [910,]  1.00000000  1.00000000
 [911,] -0.33333333 -0.33333333
 [912,] -0.27777778 -0.27777778
 [913,]  1.33333333  1.33333333
 [914,]  0.80555556  0.80555556
 [915,]  0.33333333  0.33333333
 [916,]  0.61111111  0.61111111
 [917,] -0.25000000 -0.25000000
 [918,] -1.02777778 -1.02777778
 [919,] -1.55555556 -1.55555556
 [920,] -1.80555556 -1.80555556
 [921,] -1.61111111 -1.61111111
 [922,] -0.88888889 -0.88888889
 [923,] -0.52777778 -0.52777778
 [924,] -0.02777778 -0.02777778
 [925,]  0.00000000  0.00000000
 [926,]  0.02777778  0.02777778
 [927,] -0.02777778 -0.02777778
 [928,]  0.19444444  0.19444444
 [929,]  1.22222222  1.22222222
 [930,]  2.00000000  2.00000000
 [931,]  1.52777778  1.52777778
 [932,]  0.30555556  0.30555556
 [933,]  0.44444444  0.44444444
 [934,]  0.05555556  0.05555556
 [935,] -1.05555556 -1.05555556
 [936,] -1.36111111 -1.36111111
 [937,] -0.55555556 -0.55555556
 [938,] -0.16666667 -0.16666667
 [939,]  0.05555556  0.05555556
 [940,] -1.22222222 -1.22222222
 [941,] -1.16666667 -1.16666667
 [942,] -0.27777778 -0.27777778
 [943,]  0.08333333  0.08333333
 [944,] -0.05555556 -0.05555556
 [945,] -0.02777778 -0.02777778
 [946,]  0.08333333  0.08333333
 [947,] -0.02777778 -0.02777778
 [948,] -0.05555556 -0.05555556
 [949,]  0.00000000  0.00000000
 [950,]  0.00000000  0.00000000
 [951,]  0.00000000  0.00000000
 [952,]  0.00000000  0.00000000
 [953,]  0.02777778  0.02777778
 [954,]  0.00000000  0.00000000
 [955,]  0.00000000  0.00000000
 [956,] -0.02777778 -0.02777778
 [957,]  0.00000000  0.00000000
 [958,]  0.00000000  0.00000000
 [959,]  0.00000000  0.00000000
 [960,]  0.02777778  0.02777778
 [961,] -0.02777778 -0.02777778
 [962,]  0.00000000  0.00000000
 [963,]  0.00000000  0.00000000
 [964,]  0.00000000  0.00000000
 [965,]  0.02777778  0.02777778
 [966,] -0.02777778 -0.02777778
 [967,]  0.00000000  0.00000000
 [968,]  0.02777778  0.02777778
 [969,] -0.02777778 -0.02777778
 [970,] -0.02777778 -0.02777778
 [971,]  0.02777778  0.02777778
 [972,]  0.02777778  0.02777778
 [973,] -0.02777778 -0.02777778
 [974,]  0.05555556  0.05555556
 [975,] -0.02777778 -0.02777778
 [976,]  0.02777778  0.02777778
 [977,] -0.02777778 -0.02777778
 [978,]  0.00000000  0.00000000
 [979,] -0.02777778 -0.02777778
 [980,]  0.05555556  0.05555556
 [981,] -0.05555556 -0.05555556
 [982,]  0.02777778  0.02777778
 [983,] -0.02777778 -0.02777778
 [984,]  0.02777778  0.02777778
 [985,] -0.02777778 -0.02777778
 [986,]  0.00000000  0.00000000
 [987,]  0.00000000  0.00000000
 [988,]  0.02777778  0.02777778
 [989,]  0.00000000  0.00000000
 [990,]  0.02777778  0.02777778
 [991,] -0.08333333 -0.08333333
 [992,]  0.00000000  0.00000000
 [993,]  0.02777778  0.02777778
 [994,]  0.00000000  0.00000000
 [995,]  0.05555556  0.05555556
 [996,]  0.00000000  0.00000000
 [997,]  0.08333333  0.08333333
 [998,] -0.13888889 -0.13888889
 [999,]  0.00000000  0.00000000
[1000,]  0.02777778  0.02777778
> 
> #ans = accel data series for each pems in my.pems list
> 
> #             [,1]        [,2]
> # [1,]  0.00000000  0.00000000
> # [2,]  0.00000000  0.00000000
> # [3,]  0.05555556  0.05555556
> # [4,]  0.00000000  0.00000000
> # [5,] -0.02777778 -0.02777778
> # [6,]  0.05555556  0.05555556
> # ...
> 
> #or
> #lapply(my.pems, function(x) 
> #                  calcAccel(velocity, local.time, data=x))
> #for output as a list of pems objects with accel added to each
> 
> #note:
> #sapply if you can/want to simiplify output to data.frame
> #lapply if you want to keep output as a list of answers
> 
> 
> ###########
> #example 3
> ###########
> 
> #making a function that allows third party hijack
> #and pems management
> 
> my.fun <- function(speed, time, data = NULL, hijack = FALSE, 
+                    ..., fun.name = "my.function"){
+ 
+     #setup
+     this.call <- match.call()
+     
+     #run checks
+     settings <- calcChecks(fun.name, ..., data = data)
+     
+     #get pems elements if not already got
+     if(!hijack){
+  
+         #the check handle errors and error messaging
+         #checkInput 
+         speed <- checkInput(speed, data, fun.name = fun.name,   
+                             if.missing = settings$if.missing,
+                             unit.conversions = settings$unit.conversions)
+ 
+         time <- checkInput(time, data, fun.name = fun.name,   
+                             if.missing = settings$if.missing,
+                             unit.conversions = settings$unit.conversions)
+     }
+ 
+     #any extra error/missing case handling? 
+ 
+     #run 'hijacked' code
+ 
+     #reset units to what you want
+     #... allows you to pass local unit.conversions
+     speed <- convertUnits(speed, to = "km/h", hijack = TRUE, 
+                           if.missing = settings$if.missing,
+                           unit.conversions = settings$unit.conversions)
+ 
+     #use someone else's calculation
+     distance <- calcDistance(speed, time, hijack = TRUE, 
+                           if.missing = settings$if.missing,
+                           unit.conversions = settings$unit.conversions)
+ 
+     #do other stuff?
+ 
+     #reset units again?
+ 
+     #output
+     #calcPack handling the output type  
+     #and my pems history tracking if data modified
+     calcPack(output = distance, data = data, settings = settings, 
+              fun.name = fun.name, this.call = this.call)     
+ 
+ }
> 
> ans <- my.fun(velocity, local.time, pems.1)
> 
> #seems long winded but gives you control of 
> ##the error handling, unit management, and output type
> ##and (if working in pems objects) history logging 
> 
> ##and lets you do this
> 
> ans <- lapply(my.pems, function(x) 
+                   my.fun(velocity, local.time, data=x))
> 
> #which will not always work if you are running 
> #functions in functions, especially if those functions
> #are also running functions in functions...
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("2.4.pems.plots")
> ### * 2.4.pems.plots
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 2.4.pems.plots
> ### Title: Various plots for pems.utils
> ### Aliases: 2.4.pems.plots pems.plots latticePlot panel.PEMSXYPlot XYZPlot
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #basic usage of latticePlot
> 
> latticePlot(velocity~local.time, data = pems.1, type = "l")
> 
> #in lattice, xyplot(velocity~local.time, data = getData(pems.1), type = "l")
> #Note: to use lattice functions directly with pems objects
> #      just pass data component with data = getData(pems) 
> #      (NOT data = pems)
> 
> 
> latticePlot(velocity~local.time, data = pems.1, col = "red", 
+             pch = 20, panel = panel.PEMSXYPlot, 
+             grid = list(col ="black", lty=2))
> 
> 
> #basic usage of XYZPlot
> 
> a <- calcAccel(velocity, local.time, data =pems.1)
> 
> XYZPlot(~accel*velocity, data=a)
> 
> XYZPlot(~accel*velocity, data=a, plot = wireframe, shade=TRUE)
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("2.5.analysis.summary.reports")
> ### * 2.5.analysis.summary.reports
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 2.5.analysis.summary.reports
> ### Title: Generating summary reports
> ### Aliases: 2.5.analysis.summary.reports summary.reports summaryReport
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #basic usage
> 
> summaryReport(velocity, local.time, data=pems.1)
  distance.travelled.km time.total.s avg.speed.km.h avg.running.speed.km.h
1              6.186056         1000        22.2698               28.78538
  time.idle.s time.idle.pc avg.accel.m.s.s time.accel.s time.accel.pc
1          40            4       0.7921279          271          27.1
  avg.decel.m.s.s time.decel.s time.decel.pc
1      -0.9039449          238          23.8
> 
> ##  distance.travelled.km time.total.s avg.speed.km.h avg.running.speed.km.h
> ##1              6.186056         1000        22.2698               28.78538
> ##  time.idle.s time.idle.pc avg.accel.m.s.s time.accel.s time.accel.pc
> ##1          40            4       0.7921279          271          27.1
> ##  avg.decel.m.s.s time.decel.s time.decel.pc
> ##1      -0.9039449          238          23.8
> 
> #apply to multiple cases
> 
> my.pems <- list(pems.1, pems.1)
> 
> sapply(my.pems, function(x) 
+                     summaryReport(velocity, local.time, data = x))
                       [,1]       [,2]      
distance.travelled.km  6.186056   6.186056  
time.total.s           1000       1000      
avg.speed.km.h         22.2698    22.2698   
avg.running.speed.km.h 28.78538   28.78538  
time.idle.s            40         40        
time.idle.pc           4          4         
avg.accel.m.s.s        0.7921279  0.7921279 
time.accel.s           271        271       
time.accel.pc          27.1       27.1      
avg.decel.m.s.s        -0.9039449 -0.9039449
time.decel.s           238        238       
time.decel.pc          23.8       23.8      
> 
> 
> #                        [,1]       [,2]      
> # distance.travelled.km  6.186056   6.186056  
> # time.total.s           1000       1000      
> # avg.speed.km.h         22.2698    22.2698   
> # avg.running.speed.km.h 28.78538   28.78538  
> # time.idle.s            40         40        
> # time.idle.pc           4          4         
> # avg.accel.m.s.s        0.7921279  0.7921279 
> # time.accel.s           271        271       
> # time.accel.pc          27.1       27.1      
> # avg.decel.m.s.s        -0.9039449 -0.9039449
> # time.decel.s           238        238       
> # time.decel.pc          23.8       23.8  
> 
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("2.5.conditioning.pems.data")
> ### * 2.5.conditioning.pems.data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 2.6.conditioning.pems.data
> ### Title: Data conditioning for pems data
> ### Aliases: 2.6.conditioning.pems.data conditioning.pems.data cutBy
> ###   cutByRow
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #basic usage
> 
> #cut into equal subsets
> a <- cutBy(velocity, n= 5, data=pems.1)
> 
> latticePlot(velocity~local.time|cut, data=a, 
+              type="l", layout=c(1,5))
> 
> #cut at three points
> a <- cutBy(velocity, rows=c(180,410,700), data=pems.1)
> 
> latticePlot(velocity~local.time|cut, data=a, 
+              type="l", layout=c(1,4))
> 
> 
> 
> 
> cleanEx()
> nameEx("3.1.example.data")
> ### * 3.1.example.data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 3.1.example.data
> ### Title: example data for use with pems.utils
> ### Aliases: 3.1.example.data example.data pems.1
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> #to be confirmed
> 
> 
> 
> 
> cleanEx()
> nameEx("3.2.look.up.tables")
> ### * 3.2.look.up.tables
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 3.2.look-up.tables
> ### Title: reference data for use with pems.utils
> ### Aliases: 3.2.look-up.tables look-up.tables ref.unit.conversions
> ###   ref.chem ref.petrol ref.diesel
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> #basic structure
> ref.unit.conversions[[1]]
$from
[1] "km/h" "kph" 

$to
[1] "mi/h" "mph" 

$conversion
function (x) 
x * 0.44704

$tag
[1] "kilometers/hour to miles/hour"

> 
> 
> 
> 
> cleanEx()
> nameEx("4.1.check.functions")
> ### * 4.1.check.functions
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: 4.1.common.check.functions
> ### Title: common check... functions
> ### Aliases: 4.1.common.check.functions check... checkInput checkOption
> ###   checkPEMS checkUnits checkOutput checkIfMissing
> ### Keywords: methods
> 
> ### ** Examples
> 
> 
> ###########
> ##example 1 
> ###########
> 
> #some different data
> 
> a <- 1
> b <- data.frame(v=10, c=1)
> 
> #using checkInput
> 
> checkInput(a)           # 1  (attr name = "a")
[1] 1
attr(,"name")
[1] "a"
> checkInput(v, data = b) # 10 (attr name = "v")
[1] 10
attr(,"name")
[1] "v"
attr(,"units")
[1] NA
> 
> #checkInput(v)
> #Error:   In checkInput(...) input 'v' not found
> 
> ###########
> ##example 2
> ###########
> 
> #using checkInput to plot with user labels
> 
> standard.plot <- function(x, y, data = NULL){
+ 
+     #getting x and y
+     my.x <- checkInput(x, data = data, input.name = "x", 
+                        fun.name = "standard.plot")
+     my.y <- checkInput(y, data = data, input.name = "y", 
+                        fun.name = "standard.plot")
+ 
+     #plotting (and labelling it)
+     plot(my.x, my.y, xlab = attributes(my.x)$name, 
+          ylab = attributes(my.y)$name)
+ }
> 
> standard.plot(a,v, data=b) #etc
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.09 0.11 1.22 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')

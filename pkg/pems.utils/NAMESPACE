#NEED to work out how to compile
#with imports

#imports

#currently library loaded
#so user/examples accessible

#seems to need these imported as well as depends
import(lattice)
import(loa)

#requested by CRAN
importFrom("grDevices", "colorRampPalette", "gray")
importFrom("graphics", "abline", "arrows", "plot")
importFrom("methods", "is")
importFrom("stats", "aggregate", "as.formula", "ccf", "model.frame",
           "na.omit", "na.pass")
importFrom("utils", "read.csv", "read.delim", "write.table")


#imported packages 
#import(utils) #just importing head and tail methods
import(grid)
import(RColorBrewer)
import(latticeExtra)
#import(ggplot2) #just importing fortify
#import(plyr) #replacing with dplyr
import(dplyr)

#front.of.house

#make.pems
export(is.pems)
export(pems)
export(pems.element)
export(isPEMS)
export(rebuildPEMS) 
export(makePEMS)
export(makePEMSElement)
export(as.pems)

S3method(as.pems, default)
S3method(as.pems, data.frame)

#import.pems
export(import2PEMS) 
export(importTAB2PEMS) 
export(importCSV2PEMS) 
export(importOBS2PEMS) 
export(importOB12PEMS) 
export(importParSYNC2PEMS)
export(importSEMTECH2PEMS)
export(importCAGE2PEMS)
export(importRoyalTek2PEMS)
export(importKML2PEMS) 

#structure
export(pemsElement)
export(pemsData)
export(pemsConstants)
export(pemsHistory)

#merge.pems
export(align)
export(cAlign)
export(findLinearOffset)
export(tAlign)
#bindPEMS

#export
export(exportPEMSData)
export(exportPEMS2CSV)


#tidyverse

#rlang
#might want to just import all of package?

importFrom(rlang, caller_env, have_name, exprs_auto_name)
#import(rlang)

#not sure why I need to do this
#but it make the methods work without
#the dplyr loaded
importFrom(dplyr, select)
importFrom(dplyr, rename)
importFrom(dplyr, filter)
importFrom(dplyr, arrange)
importFrom(dplyr, slice)
importFrom(dplyr, mutate)
importFrom(dplyr, group_by)
importFrom(dplyr, summarise)

importFrom(dplyr, groups)
importFrom(dplyr, ungroup)
importFrom(dplyr, group_size)
importFrom(dplyr, n_groups)


export(select)
export(rename)
export(filter)
export(arrange)
export(slice)
export(mutate)
export(group_by)
export(summarise)

export(groups)
export(ungroup)
export(group_size)
export(n_groups)



S3method(select, pems)
S3method(rename, pems)
S3method(filter, pems)
S3method(arrange, pems)
S3method(slice, pems)
S3method(mutate, pems)
S3method(group_by, pems)
S3method(summarise, pems)

S3method(groups, pems)
S3method(ungroup, pems)
S3method(group_size, pems)
S3method(n_groups, pems)

S3method(select_, pems)
S3method(rename_, pems)
S3method(filter_, pems)
S3method(arrange_, pems)
S3method(slice_, pems)
S3method(mutate_, pems)
S3method(group_by_, pems)
S3method(summarise_, pems)


#need for ggplot2 add-in
importFrom(ggplot2, fortify)
export(fortify)
S3method(fortify, pems)


#generic.pems.handlers

#imports for non-base
importFrom(utils,head)
importFrom(utils,tail)



S3method(as.data.frame, pems)
export(as.data.frame)



S3method(dim, pems)
###### dim does these
#S3method(nrow, pems)
#S3method(ncol, pems)
######
S3method("$", pems)
S3method("$<-", pems)
S3method("[", pems)
S3method("[<-", pems)
S3method("[[", pems)
S3method("[[<-", pems)
S3method(print, pems)
S3method(plot, pems)
S3method(names, pems)
S3method("names<-", pems)
S3method(head, pems)
S3method(tail, pems)
S3method(summary, pems)
S3method(units, pems)
S3method("units<-", pems)
S3method(with, pems)
S3method(subset, pems)

S3method("[", pems.element)
S3method("[<-", pems.element)
S3method(as.data.frame, pems.element)
S3method(print, pems.element)
S3method(plot, pems.element)
S3method(units, pems.element)
S3method("units<-", pems.element)
S3method(summary, pems.element)





###########################
#imported whole thing above
#need for head and tail
##importFrom(utils,head)
##importFrom(utils,tail)
###########################

#plots
export(latticePlot)
export(panel.PEMSXYPlot)
export(XYZPlot)
export(pemsPlot)
export(panel.pemsPlot)
export(preprocess.pemsPlot)
export(pemsXYZCondUnitsHandler)
export(WatsonPlot)
export(preprocess.WatsonPlot)
export(panel.WatsonBinPlot)
export(panel.WatsonContourPlot)
export(panel.WatsonSmoothContourPlot)




#calcs
export(calcDistance)
export(calcSpeed)
export(calcAccel)
export(calcAcceleration)
export(calcJerk)
export(calcVSP)
export(calcVSPJimenezPalaciosCMEM)
export(calcEm)
export(calcEmHoribaPitot)

#calc handlers
export(calcChecks)
export(calcPack)

#corrections
export(calcPack2)
export(correctInput)
export(zeroNegatives)

#cutBy
export(cutBy)
export(cutByRow)

#unit.handlers

export(getUnits) 
export(setUnits) 
export(convertUnits)
export(addUnitConversion)
export(addUnitAlias)
export(listUnitConversions)

#summaryReports
export(summaryReport) 

#check...functions
export(checkInput) 
export(checkOption) 
export(checkPEMS) 
export(checkUnits) 
export(checkOutput)
export(checkIfMissing)



